global
    ssl-default-bind-options no-tlsv11 no-tlsv10 no-sslv3 no-tls-tickets
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384

    chroot      /usr/local/etc/haproxy
    pidfile     /haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    presetenv   INSTANCE_NAME          "haproxy1"
    presetenv   UPSTREAM_INSTANCE_NAME "haproxy2"
    presetenv   HA_LOOP_LIMIT          "2"

    tune.ssl.default-dh-param 2048
    stats socket /usr/local/etc/haproxy.socket
    stats timeout 2m

defaults
    mode                    http
    log                     global
    option                  dontlognull

    option http-server-close
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 4000


listen port80
    bind :80

    server main abns@main send-proxy-v2

listen port443
    mode tcp

    bind :443
    
    # Add 200ms to measure time more easily
    tcp-request inspect-delay 20ms
    tcp-request content accept if WAIT_END
    tcp-request content accept if { req_ssl_hello_type 1 }

    server main abns@main-ssl send-proxy-v2

frontend main
    mode http
    stats enable
    stats uri /haproxy-stats
    option forwardfor

    bind abns@main-ssl accept-proxy ssl crt "${INSTANCE_NAME}.pem" ca-file RootCA.pem verify required #crt-ignore-err all
    bind abns@main accept-proxy

    # option forwardfor

    # Stop loop when it comes around once
    acl stop_loop hdr_cnt("${INSTANCE_NAME}-Date") gt "${HA_LOOP_LIMIT}"
    # Track TLS for adding common name
    acl is_tls ssl_fc = 1

    http-request add-header "TLS-Client-CN"         "%{+Q}[ssl_c_s_dn(cn)]"      if     is_tls
    http-request add-header "Forwarded-Proto"       "https"                      if     is_tls
    http-request add-header "Forwarded-Proto"       "http"                       unless is_tls
    # http-request add-header "Proxy-Breadcrumb"      "${INSTANCE_NAME}"
    http-request add-header "${INSTANCE_NAME}-Date" "%t"

    use_backend     httpbin if stop_loop
    default_backend haproxy

backend haproxy
    server haproxya ${UPSTREAM_INSTANCE_NAME}:443 ssl crt "${INSTANCE_NAME}.pem" ca-file RootCA.pem verify required

backend httpbin
    server echo httpbin:80

#ssl crt /etc/haproxy/cert/server.pem ca-file /etc/haproxy/cert/ca.crt verify optional crt-ignore-err all